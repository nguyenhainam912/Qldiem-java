/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package design;

import design.popup.SinhvienJFrame;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import share.DBConnect;
import model.Sinhvien;

/**
 *
 * @author nguye
 */
public class SinhvienJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HocvienJPanel
     */
    private SinhvienJPanel sinhvienJPanel = this;
    public SinhvienJPanel() {
        initComponents();
        tbSinhVien.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Lấy số hàng đã được nhấp
                if (e.getClickCount() == 2) {
                    int row = tbSinhVien.getSelectedRow();
                Sinhvien sinhvien = new Sinhvien();
                sinhvien.setMasinhvien(  tbSinhVien.getValueAt(row, 0).toString()) ;
                sinhvien.setTensinhvien(tbSinhVien.getValueAt(row, 1).toString()) ;
                SinhvienJFrame frame = new SinhvienJFrame(sinhvienJPanel, sinhvien, true);
                frame.setTitle("Sửa thông tin");
                
                frame.setVisible(true);
                }
                
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            
        });
        JTableHeader thead = tbSinhVien.getTableHeader();
        thead.setFont(new Font("Segoe", Font.ITALIC,16));
        thead.setBackground(new Color(200,255,255));
        loaddata();
    }

    public void loaddata() {
        try (Connection connection = DBConnect.getConnection()) {
        // Kiểm tra nếu kết nối thành công
        if (connection != null) {
            // Chuẩn bị câu truy vấn SQL để lấy dữ liệu từ bảng khachhang
            String query = "SELECT * FROM SinhVien";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Xóa dữ liệu hiện tại trong bảng
                DefaultTableModel model = (DefaultTableModel) tbSinhVien.getModel();
                model.setRowCount(0);

                // Duyệt qua kết quả và thêm vào bảng
                while (resultSet.next()) {
                    String cid = resultSet.getString("MaSv");
                    String cname = resultSet.getString("HoTen");
//                    String ngaysinh = resultSet.getString("NgaySinh");
//                    String gioitinh = resultSet.getString("GioiTinh");
//                    String diachi = resultSet.getString("DiaCHi");
                    

                    model.addRow(new Object[]{cid, cname});
                }
            } catch (SQLException ex) {
                System.err.println("Lỗi thực hiện truy vấn: " + ex.getMessage());
            }
        }
        } catch (SQLException ex) {
            System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSinhVien = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1000, 680));

        jPanel1.setBackground(new java.awt.Color(230, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 680));

        jButton1.setBackground(new java.awt.Color(122, 122, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tbSinhVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã SV", "Họ Tên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSinhVien.setGridColor(new java.awt.Color(0, 0, 153));
        tbSinhVien.setPreferredSize(new java.awt.Dimension(980, 600));
        tbSinhVien.setRequestFocusEnabled(false);
        tbSinhVien.setRowHeight(30);
        tbSinhVien.setRowMargin(10);
        tbSinhVien.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tbSinhVien.setSelectionForeground(new java.awt.Color(51, 51, 255));
        jScrollPane1.setViewportView(tbSinhVien);

        jButton2.setBackground(new java.awt.Color(112, 112, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Xóa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Sinhvien sinhvien = new Sinhvien();
        SinhvienJFrame frame = new SinhvienJFrame(sinhvienJPanel,sinhvien, false);
        
        frame.setVisible(true);
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tbSinhVien.getSelectedRow();

        if (selectedRowIndex != -1) {
            // Lấy giá trị của cột CID từ dòng được chọn
            String cid = tbSinhVien.getValueAt(selectedRowIndex, 0).toString();

            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xoa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                try (Connection connection = DBConnect.getConnection()) {
                    // Kiểm tra nếu kết nối thành công
                    if (connection != null) {
                        // Chuẩn bị câu truy vấn SQL để xóa thông tin khách hàng
                        String query = "DELETE FROM SinhVien WHERE MaSv = ?";

                        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                            // Thiết lập giá trị cho tham số trong câu truy vấn
                            preparedStatement.setString(1, cid);

                            // Thực hiện truy vấn xóa
                            int rowsAffected = preparedStatement.executeUpdate();

                            if (rowsAffected > 0) {
                                System.out.println("Xóa thông tin khách hàng thành công!");
                                // Sau khi xóa thành công, cập nhật lại bảng
                                loaddata();
                            } else {
                                System.out.println("Không tìm thấy khách hàng để xóa!");
                            }
                        } catch (SQLException ex) {
                            System.err.println("Lỗi thực hiện truy vấn xóa: " + ex.getMessage());
                        }
                    }
                } catch (SQLException ex) {
                    System.err.println("Lỗi kết nối đến cơ sở dữ liệu: " + ex.getMessage());
                }
            }
        } else {
            System.out.println("Vui lòng chọn một dòng để xóa!");
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbSinhVien;
    // End of variables declaration//GEN-END:variables
}
